# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
setwd("~/Personal/SÃ¸ka_jobb/R_pagedown_CV_strayer")
matrix(1:6,3,2)
m <- matrix(1:6,3,2)
m[,-1]
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
setwd("~/Personal/SÃ¸ka_jobb/R_pagedown_CV_strayer")
getwd()
setwd("/Users/xrydbh/Personal/SÃ¸ka_jobb/jobbfri_2022/trygghetsstiftelsen(tsn)/seminarier/2022_03_17_clarify_your_competence/cover_letter/sandbox")
getwd()
get_wd()
getwd()
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
setwd("~/Personal/SÃ¸ka_jobb/R_pagedown_CV_strayer")
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
