group=food_regime,
col=food_regime)) +
geom_point() +
geom_smooth(method=lm,se=F)  # +
#scale_color_viridis_d(option = "plasma", end = .7) # for colorblind
## Build and fit a model
lm_mod <- linear_reg()
lm_fit <-
lm_mod %>%
fit(width ~ initial_volume * food_regime, data = urchins)
lm_fit
lm_fit$fit
new_points <- expand.grid(initial_volume = 20,
food_regime = c("Initial", "Low", "High"))
new_points
mean_pred <- predict(lm_fit, new_data = new_points)
mean_pred
conf_int_pred <- predict(lm_fit,
new_data = new_points,
type = "conf_int")
conf_int_pred
type = "conf_int")
plot_data <-
new_points %>%
bind_cols(mean_pred) %>%
bind_cols(conf_int_pred)
# and plot:
ggplot(plot_data, aes(x = food_regime)) +
geom_point(aes(y = .pred)) +
geom_errorbar(aes(ymin = .pred_lower,
ymax = .pred_upper),
width = .2) +
labs(y = "urchin size")
# set the prior distribution
prior_dist <- rstanarm::student_t(df = 1)
library(rstanarm)
install.packages(rstanarm)
install.packages("rstanarm")
library(rstanarm)
prior_dist <- rstanarm::student_t(df = 1)
set.seed(123)
# make the parsnip model
bayes_mod <-
linear_reg() %>%
set_engine("stan",
prior_intercept = prior_dist,
prior = prior_dist)
# train the model
bayes_fit <-
bayes_mod %>%
fit(width ~ initial_volume * food_regime, data = urchins)
print(bayes_fit, digits = 5)
tidy(bayes_fit, conf.int = TRUE)
bayes_plot_data <-
new_points %>%
bind_cols(predict(bayes_fit, new_data = new_points)) %>%
bind_cols(predict(bayes_fit, new_data = new_points, type = "conf_int"))
ggplot(bayes_plot_data, aes(x = food_regime)) +
geom_point(aes(y = .pred)) +
geom_errorbar(aes(ymin = .pred_lower, ymax = .pred_upper), width = .2) +
labs(y = "urchin size") +
ggtitle("Bayesian model with t(1) prior distribution")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_17_data_scientist_spotify" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
getwd()
setwd("~/Personal/SÃ¸ka_jobb/R_pagedown_CV_strayer")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_17_data_scientist_spotify" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_17_data_scientist_spotify" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_23_Quantitative_Senior_Scientist_Biological_insights_AZ_R-133033-2" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_23_Quantitative_Senior_Scientist_Biological_insights_AZ_R-133033-2" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_23_Quantitative_Senior_Scientist_Biological_insights_AZ_R-133033-2" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_23_Quantitative_Senior_Scientist_Biological_insights_AZ_R-133033-2" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_23_Quantitative_Senior_Scientist_Biological_insights_AZ_R-133033-2" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_29_Computational_Biologist_gsk_req_id_332717" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_29_Computational_Biologist_gsk_req_id_332717" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_08_29_Computational_Biologist_gsk_req_id_332717" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_09_04_template_AZ" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_09_17_Research_Scientist_Bioinformatics_Exscientia_Vienna" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_09_17_Research_Scientist_Bioinformatics_Exscientia_Vienna" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_09_17_Research_Scientist_Bioinformatics_Exscientia_Vienna" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_090_18_Target_Analyst_Exscientia_Cambridge_Remote" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_090_18_Target_Analyst_Exscientia_Cambridge_Remote" #"cv_hr_2022_04_17_Sen_Sci_Mol_Bio_Bioinf_AZ"    #cv,"cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"#
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
