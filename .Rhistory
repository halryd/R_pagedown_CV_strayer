# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_04_30_Clinical_Application_Consultant_NGS_themo_fisher"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd"),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html"))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd"),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf"))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_04_30_Clinical_Application_Consultant_NGS_themo_fisher"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd"),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html"))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd"),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf"))
tmp_html_cv_loc
paste(fn,".rmd")
paste(fn,".rmd",sep="")
# Set filename
fn <- "cv_hr_2022_04_30_Clinical_Application_Consultant_NGS_themo_fisher"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
setwd("~/Personal/SÃ¸ka_jobb/R_pagedown_CV_strayer")
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_04_30_Clinical_Application_Consultant_NGS_themo_fisher"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_04_30_Clinical_Application_Consultant_NGS_themo_fisher"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_04_30_Clinical_Application_Consultant_NGS_themo_fisher"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
if(params$pdf_mode){
cat("View this CV online with links at https://rpubs.com/halryd/cv",params$cv_version,sep="")
} else {
cat(paste("[<i class='fas fa-download'></i> Download a PDF of this CV](https://github.com/halryd/R_pagedown_CV_strayer/blob/main/cv",params$cv_version,".pdf)",sep=""))
}
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_04_30_Clin_App_Cons_NGS_T_F"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
# This script builds both the HTML and PDF versions of your CV
# If you wanted to speed up rendering for googlesheets driven CVs you could use
# this script to cache a version of the CV_Printer class with data already
# loaded and load the cached version in the .Rmd instead of re-fetching it twice
# for the HTML and PDF rendering. This exercise is left to the reader.
# Knit the Markdown version
# rmarkdown::render("cv.rmd",
#                   "github_document",
#                   params = list(pdf_mode = FALSE),
#                   output_file = "cv.md")
# rmarkdown::render("./r_subscripts/002b_pea_format_normalize_naFilter.R",
#                   "github_document",
#                   output_dir="./markdown/")
# Set filename
fn <- "cv_hr_2022_04_30_Clin_App_Cons_NGS_TF"
# Knit the HTML version
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = FALSE),
output_file = paste(fn,".html",sep=""))
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render(paste(fn,".rmd",sep=""),
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = paste(fn,".pdf",sep=""))
